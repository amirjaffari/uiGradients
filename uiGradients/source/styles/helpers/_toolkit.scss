@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}


@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}


// Available options
// none | antialiased | subpixel-antialiased
@mixin font-smoothing($font-smoothing : antialiased) {
  -webkit-font-smoothing: $font-smoothing;
  -moz-font-smoothing: $font-smoothing;
  -ms-font-smoothing: $font-smoothing;
  font-smoothing: $font-smoothing;
}


@mixin coverer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}


@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@mixin respond-to($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);
  @if $value != null {
    @media (min-width: $value) {
      @content;
    }
  }
}

// 3d Translate
@mixin translate($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -ms-transform: translate3d($x, $y, $z);
  -o-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

// Transition
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}



@mixin tooltip($size: 5px, $dir: left, $bgcolor: #000) {
  background-color: $bgcolor;
  position: relative;
  &:before {
    border-style: solid;
    content: "";
    display: block;
    position: absolute;
    @if (($dir == top) or ($dir == bottom)) {
      border-color: $bgcolor transparent;
      left: 50%;
      margin-left: -$size;
    } @else {
      border-color: transparent $bgcolor;
      margin-top: -$size;
      top: 50%;
    }
    @if ($dir == top) {
      border-width: 0 $size $size $size;
      top: -$size;
    }
    @if ($dir == right) {
      border-width: $size 0 $size $size;
      right: -$size;
    }
    @if ($dir == bottom) {
      border-width: $size $size 0 $size;
      bottom: -$size;
    }
    @if ($dir == left) {
      border-width: $size $size $size 0;
      left: -$size;
    }
  }
}
